[2025-01-09T15:35:53.862148] Pokretanje Flask aplikacije
[2025-01-09T15:35:53.862306] Inicijalizacija logova pri pokretanju aplikacije
[2025-01-09T15:35:53.862356] Početak funkcije get_pull_requests.
[2025-01-09T15:35:53.862387] Slanje zahteva ka API-ju sa params: {'state': 'open', 'per_page': 100}
[2025-01-09T15:35:54.586304] Odgovor API-ja dobijen, status kod: 200
[2025-01-09T15:35:54.588645] Dohvaćen broj pull requestova: 22
[2025-01-09T15:35:54.588738] Uspešno dohvaćeni pull requestovi.
[2025-01-09T15:35:54.589762] Dohvaćeni pull requestovi pri inicijalizaciji: [{'title': 'Docs: Add support for Adobe Analytics in documentation', 'num': 4379, 'link': 'https://github.com/boto/boto3/pull/4379'}, {'title': 'docs: Enhance Docs with S3 Examples of Generating Presigned URLs with Original File Names and Client Context Manager', 'num': 4377, 'link': 'https://github.com/boto/boto3/pull/4377'}, {'title': 'Removes inline scripts and inline styles to make it compatible with the newly added security headers', 'num': 4369, 'link': 'https://github.com/boto/boto3/pull/4369'}, {'title': 'Changed description for after-call Boto3 specific events', 'num': 4353, 'link': 'https://github.com/boto/boto3/pull/4353'}, {'title': 'Fixed style consistency in the set up part example of readme.', 'num': 4349, 'link': 'https://github.com/boto/boto3/pull/4349'}, {'title': 'Make ClientError accessible from S3UploadFailedError', 'num': 4346, 'link': 'https://github.com/boto/boto3/pull/4346'}, {'title': 'update the documentation for creating s3 bucket to address the region mismatch issue.', 'num': 4337, 'link': 'https://github.com/boto/boto3/pull/4337'}, {'title': 'Use built-in `logging.NullHandler`', 'num': 4231, 'link': 'https://github.com/boto/boto3/pull/4231'}, {'title': 'Add note on logical operators', 'num': 4141, 'link': 'https://github.com/boto/boto3/pull/4141'}, {'title': 'doc: add build_full_result() to Paginator', 'num': 4078, 'link': 'https://github.com/boto/boto3/pull/4078'}, {'title': 'Explain how MaxItems affects pagination in boto3', 'num': 4073, 'link': 'https://github.com/boto/boto3/pull/4073'}, {'title': 'Fix inject_condition_expressions transform for nested inputs such as …', 'num': 4054, 'link': 'https://github.com/boto/boto3/pull/4054'}, {'title': 'Add codespell: pre-commit, workflow (to just detect); make it fix found already present typos', 'num': 4035, 'link': 'https://github.com/boto/boto3/pull/4035'}, {'title': 'DynamoDB: Add support for TransactWriteItems for boto3 resource', 'num': 4010, 'link': 'https://github.com/boto/boto3/pull/4010'}, {'title': 'Updated docstrings: added clarification about Fileobj `close` behaviour', 'num': 3968, 'link': 'https://github.com/boto/boto3/pull/3968'}, {'title': 'Improve documentation for multiprocessing/threading', 'num': 3831, 'link': 'https://github.com/boto/boto3/pull/3831'}, {'title': 'docs: Added description of Sigv4 when generating PreSigned url', 'num': 3688, 'link': 'https://github.com/boto/boto3/pull/3688'}, {'title': 'refactor: rename "_get_default_session" to support use as public method', 'num': 3651, 'link': 'https://github.com/boto/boto3/pull/3651'}, {'title': "Returned future result in S3Transfer's download and upload", 'num': 3316, 'link': 'https://github.com/boto/boto3/pull/3316'}, {'title': 'Implement condition/attr __repr__', 'num': 3254, 'link': 'https://github.com/boto/boto3/pull/3254'}, {'title': 'Add Session.assume_role method', 'num': 3253, 'link': 'https://github.com/boto/boto3/pull/3253'}, {'title': 'Fix ExtraArgs supported by Bucket.copy', 'num': 3172, 'link': 'https://github.com/boto/boto3/pull/3172'}]
[2025-01-09T15:35:54.589840] Pokušaj dohvatanja SHA vrednosti fajla.
[2025-01-09T15:35:54.589881] Dohvatanje SHA vrednosti fajla sa URL-a: https://api.github.com/repos/sasa-z/logs/contents/log.txt
[2025-01-09T15:35:55.071313] SHA vrednost dobijena: 8b137891791fe96927ad78e64b0aad7bded08bdc
[2025-01-09T15:35:55.072205] SHA vrednost dobijena: 8b137891791fe96927ad78e64b0aad7bded08bdc
[2025-01-09T15:35:55.072463] SHA vrednost dobijena: 8b137891791fe96927ad78e64b0aad7bded08bdc. Pokušaj brisanja fajla sa GitHub-a.
[2025-01-09T15:35:55.072515] Pokušaj brisanja fajla sa URL-a: https://api.github.com/repos/sasa-z/logs/contents/log.txt sa SHA: 8b137891791fe96927ad78e64b0aad7bded08bdc
[2025-01-09T15:35:55.072585] Podaci za brisanje: {'message': 'Brisanje log fajla', 'sha': '8b137891791fe96927ad78e64b0aad7bded08bdc'}
[2025-01-09T15:35:55.656494] Status kod odgovora za brisanje: 200
[2025-01-09T15:35:55.656659] Odgovor za brisanje: {'content': None, 'commit': {'sha': 'da8e7e33f82aa2c4d4a4397975fea744d07a5014', 'node_id': 'C_kwDONoBLLNoAKGRhOGU3ZTMzZjgyYWEyYzRkNGE0Mzk3OTc1ZmVhNzQ0ZDA3YTUwMTQ', 'url': 'https://api.github.com/repos/sasa-z/logs/git/commits/da8e7e33f82aa2c4d4a4397975fea744d07a5014', 'html_url': 'https://github.com/sasa-z/logs/commit/da8e7e33f82aa2c4d4a4397975fea744d07a5014', 'author': {'name': 'Sasa', 'email': '93494682+sasa-z@users.noreply.github.com', 'date': '2025-01-09T14:35:55Z'}, 'committer': {'name': 'Sasa', 'email': '93494682+sasa-z@users.noreply.github.com', 'date': '2025-01-09T14:35:55Z'}, 'tree': {'sha': '4b825dc642cb6eb9a060e54bf8d69288fbee4904', 'url': 'https://api.github.com/repos/sasa-z/logs/git/trees/4b825dc642cb6eb9a060e54bf8d69288fbee4904'}, 'message': 'Brisanje log fajla', 'parents': [{'sha': '390e3deedaf14d4ac5cdce88d524142d1c22986d', 'url': 'https://api.github.com/repos/sasa-z/logs/git/commits/390e3deedaf14d4ac5cdce88d524142d1c22986d', 'html_url': 'https://github.com/sasa-z/logs/commit/390e3deedaf14d4ac5cdce88d524142d1c22986d'}], 'verification': {'verified': False, 'reason': 'unsigned', 'signature': None, 'payload': None, 'verified_at': None}}}
[2025-01-09T15:35:55.656719] Fajl na GitHub-u sa SHA vrednošću 8b137891791fe96927ad78e64b0aad7bded08bdc je obrisan.
[2025-01-09T15:35:55.657677] Fajl uspešno obrisan. Pokušaj upload-a novog fajla.
[2025-01-09T15:35:55.657988] Podaci za upload: {'message': 'Dodati logovi', 'content': 'WzIwMjUtMDEtMDlUMTU6MzU6NTMuODYyMTQ4XSBQb2tyZXRhbmplIEZsYXNrIGFwbGlrYWNpamUKWzIwMjUtMDEtMDlUMTU6MzU6NTMuODYyMzA2XSBJbmljaWphbGl6YWNpamEgbG9nb3ZhIHByaSBwb2tyZXRhbmp1IGFwbGlrYWNpamUKWzIwMjUtMDEtMDlUMTU6MzU6NTMuODYyMzU2XSBQb8SNZXRhayBmdW5rY2lqZSBnZXRfcHVsbF9yZXF1ZXN0cy4KWzIwMjUtMDEtMDlUMTU6MzU6NTMuODYyMzg3XSBTbGFuamUgemFodGV2YSBrYSBBUEktanUgc2EgcGFyYW1zOiB7J3N0YXRlJzogJ29wZW4nLCAncGVyX3BhZ2UnOiAxMDB9ClsyMDI1LTAxLTA5VDE1OjM1OjU0LjU4NjMwNF0gT2Rnb3ZvciBBUEktamEgZG9iaWplbiwgc3RhdHVzIGtvZDogMjAwClsyMDI1LTAxLTA5VDE1OjM1OjU0LjU4ODY0NV0gRG9odmHEh2VuIGJyb2ogcHVsbCByZXF1ZXN0b3ZhOiAyMgpbMjAyNS0wMS0wOVQxNTozNTo1NC41ODg3MzhdIFVzcGXFoW5vIGRvaHZhxIdlbmkgcHVsbCByZXF1ZXN0b3ZpLgpbMjAyNS0wMS0wOVQxNTozNTo1NC41ODk3NjJdIERvaHZhxIdlbmkgcHVsbCByZXF1ZXN0b3ZpIHByaSBpbmljaWphbGl6YWNpamk6IFt7J3RpdGxlJzogJ0RvY3M6IEFkZCBzdXBwb3J0IGZvciBBZG9iZSBBbmFseXRpY3MgaW4gZG9jdW1lbnRhdGlvbicsICdudW0nOiA0Mzc5LCAnbGluayc6ICdodHRwczovL2dpdGh1Yi5jb20vYm90by9ib3RvMy9wdWxsLzQzNzknfSwgeyd0aXRsZSc6ICdkb2NzOiBFbmhhbmNlIERvY3Mgd2l0aCBTMyBFeGFtcGxlcyBvZiBHZW5lcmF0aW5nIFByZXNpZ25lZCBVUkxzIHdpdGggT3JpZ2luYWwgRmlsZSBOYW1lcyBhbmQgQ2xpZW50IENvbnRleHQgTWFuYWdlcicsICdudW0nOiA0Mzc3LCAnbGluayc6ICdodHRwczovL2dpdGh1Yi5jb20vYm90by9ib3RvMy9wdWxsLzQzNzcnfSwgeyd0aXRsZSc6ICdSZW1vdmVzIGlubGluZSBzY3JpcHRzIGFuZCBpbmxpbmUgc3R5bGVzIHRvIG1ha2UgaXQgY29tcGF0aWJsZSB3aXRoIHRoZSBuZXdseSBhZGRlZCBzZWN1cml0eSBoZWFkZXJzJywgJ251bSc6IDQzNjksICdsaW5rJzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9ib3RvL2JvdG8zL3B1bGwvNDM2OSd9LCB7J3RpdGxlJzogJ0NoYW5nZWQgZGVzY3JpcHRpb24gZm9yIGFmdGVyLWNhbGwgQm90bzMgc3BlY2lmaWMgZXZlbnRzJywgJ251bSc6IDQzNTMsICdsaW5rJzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9ib3RvL2JvdG8zL3B1bGwvNDM1Myd9LCB7J3RpdGxlJzogJ0ZpeGVkIHN0eWxlIGNvbnNpc3RlbmN5IGluIHRoZSBzZXQgdXAgcGFydCBleGFtcGxlIG9mIHJlYWRtZS4nLCAnbnVtJzogNDM0OSwgJ2xpbmsnOiAnaHR0cHM6Ly9naXRodWIuY29tL2JvdG8vYm90bzMvcHVsbC80MzQ5J30sIHsndGl0bGUnOiAnTWFrZSBDbGllbnRFcnJvciBhY2Nlc3NpYmxlIGZyb20gUzNVcGxvYWRGYWlsZWRFcnJvcicsICdudW0nOiA0MzQ2LCAnbGluayc6ICdodHRwczovL2dpdGh1Yi5jb20vYm90by9ib3RvMy9wdWxsLzQzNDYnfSwgeyd0aXRsZSc6ICd1cGRhdGUgdGhlIGRvY3VtZW50YXRpb24gZm9yIGNyZWF0aW5nIHMzIGJ1Y2tldCB0byBhZGRyZXNzIHRoZSByZWdpb24gbWlzbWF0Y2ggaXNzdWUuJywgJ251bSc6IDQzMzcsICdsaW5rJzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9ib3RvL2JvdG8zL3B1bGwvNDMzNyd9LCB7J3RpdGxlJzogJ1VzZSBidWlsdC1pbiBgbG9nZ2luZy5OdWxsSGFuZGxlcmAnLCAnbnVtJzogNDIzMSwgJ2xpbmsnOiAnaHR0cHM6Ly9naXRodWIuY29tL2JvdG8vYm90bzMvcHVsbC80MjMxJ30sIHsndGl0bGUnOiAnQWRkIG5vdGUgb24gbG9naWNhbCBvcGVyYXRvcnMnLCAnbnVtJzogNDE0MSwgJ2xpbmsnOiAnaHR0cHM6Ly9naXRodWIuY29tL2JvdG8vYm90bzMvcHVsbC80MTQxJ30sIHsndGl0bGUnOiAnZG9jOiBhZGQgYnVpbGRfZnVsbF9yZXN1bHQoKSB0byBQYWdpbmF0b3InLCAnbnVtJzogNDA3OCwgJ2xpbmsnOiAnaHR0cHM6Ly9naXRodWIuY29tL2JvdG8vYm90bzMvcHVsbC80MDc4J30sIHsndGl0bGUnOiAnRXhwbGFpbiBob3cgTWF4SXRlbXMgYWZmZWN0cyBwYWdpbmF0aW9uIGluIGJvdG8zJywgJ251bSc6IDQwNzMsICdsaW5rJzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9ib3RvL2JvdG8zL3B1bGwvNDA3Myd9LCB7J3RpdGxlJzogJ0ZpeCBpbmplY3RfY29uZGl0aW9uX2V4cHJlc3Npb25zIHRyYW5zZm9ybSBmb3IgbmVzdGVkIGlucHV0cyBzdWNoIGFzIOKApicsICdudW0nOiA0MDU0LCAnbGluayc6ICdodHRwczovL2dpdGh1Yi5jb20vYm90by9ib3RvMy9wdWxsLzQwNTQnfSwgeyd0aXRsZSc6ICdBZGQgY29kZXNwZWxsOiBwcmUtY29tbWl0LCB3b3JrZmxvdyAodG8ganVzdCBkZXRlY3QpOyBtYWtlIGl0IGZpeCBmb3VuZCBhbHJlYWR5IHByZXNlbnQgdHlwb3MnLCAnbnVtJzogNDAzNSwgJ2xpbmsnOiAnaHR0cHM6Ly9naXRodWIuY29tL2JvdG8vYm90bzMvcHVsbC80MDM1J30sIHsndGl0bGUnOiAnRHluYW1vREI6IEFkZCBzdXBwb3J0IGZvciBUcmFuc2FjdFdyaXRlSXRlbXMgZm9yIGJvdG8zIHJlc291cmNlJywgJ251bSc6IDQwMTAsICdsaW5rJzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9ib3RvL2JvdG8zL3B1bGwvNDAxMCd9LCB7J3RpdGxlJzogJ1VwZGF0ZWQgZG9jc3RyaW5nczogYWRkZWQgY2xhcmlmaWNhdGlvbiBhYm91dCBGaWxlb2JqIGBjbG9zZWAgYmVoYXZpb3VyJywgJ251bSc6IDM5NjgsICdsaW5rJzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9ib3RvL2JvdG8zL3B1bGwvMzk2OCd9LCB7J3RpdGxlJzogJ0ltcHJvdmUgZG9jdW1lbnRhdGlvbiBmb3IgbXVsdGlwcm9jZXNzaW5nL3RocmVhZGluZycsICdudW0nOiAzODMxLCAnbGluayc6ICdodHRwczovL2dpdGh1Yi5jb20vYm90by9ib3RvMy9wdWxsLzM4MzEnfSwgeyd0aXRsZSc6ICdkb2NzOiBBZGRlZCBkZXNjcmlwdGlvbiBvZiBTaWd2NCB3aGVuIGdlbmVyYXRpbmcgUHJlU2lnbmVkIHVybCcsICdudW0nOiAzNjg4LCAnbGluayc6ICdodHRwczovL2dpdGh1Yi5jb20vYm90by9ib3RvMy9wdWxsLzM2ODgnfSwgeyd0aXRsZSc6ICdyZWZhY3RvcjogcmVuYW1lICJfZ2V0X2RlZmF1bHRfc2Vzc2lvbiIgdG8gc3VwcG9ydCB1c2UgYXMgcHVibGljIG1ldGhvZCcsICdudW0nOiAzNjUxLCAnbGluayc6ICdodHRwczovL2dpdGh1Yi5jb20vYm90by9ib3RvMy9wdWxsLzM2NTEnfSwgeyd0aXRsZSc6ICJSZXR1cm5lZCBmdXR1cmUgcmVzdWx0IGluIFMzVHJhbnNmZXIncyBkb3dubG9hZCBhbmQgdXBsb2FkIiwgJ251bSc6IDMzMTYsICdsaW5rJzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9ib3RvL2JvdG8zL3B1bGwvMzMxNid9LCB7J3RpdGxlJzogJ0ltcGxlbWVudCBjb25kaXRpb24vYXR0ciBfX3JlcHJfXycsICdudW0nOiAzMjU0LCAnbGluayc6ICdodHRwczovL2dpdGh1Yi5jb20vYm90by9ib3RvMy9wdWxsLzMyNTQnfSwgeyd0aXRsZSc6ICdBZGQgU2Vzc2lvbi5hc3N1bWVfcm9sZSBtZXRob2QnLCAnbnVtJzogMzI1MywgJ2xpbmsnOiAnaHR0cHM6Ly9naXRodWIuY29tL2JvdG8vYm90bzMvcHVsbC8zMjUzJ30sIHsndGl0bGUnOiAnRml4IEV4dHJhQXJncyBzdXBwb3J0ZWQgYnkgQnVja2V0LmNvcHknLCAnbnVtJzogMzE3MiwgJ2xpbmsnOiAnaHR0cHM6Ly9naXRodWIuY29tL2JvdG8vYm90bzMvcHVsbC8zMTcyJ31dClsyMDI1LTAxLTA5VDE1OjM1OjU0LjU4OTg0MF0gUG9rdcWhYWogZG9odmF0YW5qYSBTSEEgdnJlZG5vc3RpIGZhamxhLgpbMjAyNS0wMS0wOVQxNTozNTo1NC41ODk4ODFdIERvaHZhdGFuamUgU0hBIHZyZWRub3N0aSBmYWpsYSBzYSBVUkwtYTogaHR0cHM6Ly9hcGkuZ2l0aHViLmNvbS9yZXBvcy9zYXNhLXovbG9ncy9jb250ZW50cy9sb2cudHh0ClsyMDI1LTAxLTA5VDE1OjM1OjU1LjA3MTMxM10gU0hBIHZyZWRub3N0IGRvYmlqZW5hOiA4YjEzNzg5MTc5MWZlOTY5MjdhZDc4ZTY0YjBhYWQ3YmRlZDA4YmRjClsyMDI1LTAxLTA5VDE1OjM1OjU1LjA3MjIwNV0gU0hBIHZyZWRub3N0IGRvYmlqZW5hOiA4YjEzNzg5MTc5MWZlOTY5MjdhZDc4ZTY0YjBhYWQ3YmRlZDA4YmRjClsyMDI1LTAxLTA5VDE1OjM1OjU1LjA3MjQ2M10gU0hBIHZyZWRub3N0IGRvYmlqZW5hOiA4YjEzNzg5MTc5MWZlOTY5MjdhZDc4ZTY0YjBhYWQ3YmRlZDA4YmRjLiBQb2t1xaFhaiBicmlzYW5qYSBmYWpsYSBzYSBHaXRIdWItYS4KWzIwMjUtMDEtMDlUMTU6MzU6NTUuMDcyNTE1XSBQb2t1xaFhaiBicmlzYW5qYSBmYWpsYSBzYSBVUkwtYTogaHR0cHM6Ly9hcGkuZ2l0aHViLmNvbS9yZXBvcy9zYXNhLXovbG9ncy9jb250ZW50cy9sb2cudHh0IHNhIFNIQTogOGIxMzc4OTE3OTFmZTk2OTI3YWQ3OGU2NGIwYWFkN2JkZWQwOGJkYwpbMjAyNS0wMS0wOVQxNTozNTo1NS4wNzI1ODVdIFBvZGFjaSB6YSBicmlzYW5qZTogeydtZXNzYWdlJzogJ0JyaXNhbmplIGxvZyBmYWpsYScsICdzaGEnOiAnOGIxMzc4OTE3OTFmZTk2OTI3YWQ3OGU2NGIwYWFkN2JkZWQwOGJkYyd9ClsyMDI1LTAxLTA5VDE1OjM1OjU1LjY1NjQ5NF0gU3RhdHVzIGtvZCBvZGdvdm9yYSB6YSBicmlzYW5qZTogMjAwClsyMDI1LTAxLTA5VDE1OjM1OjU1LjY1NjY1OV0gT2Rnb3ZvciB6YSBicmlzYW5qZTogeydjb250ZW50JzogTm9uZSwgJ2NvbW1pdCc6IHsnc2hhJzogJ2RhOGU3ZTMzZjgyYWEyYzRkNGE0Mzk3OTc1ZmVhNzQ0ZDA3YTUwMTQnLCAnbm9kZV9pZCc6ICdDX2t3RE9Ob0JMTE5vQUtHUmhPR1UzWlRNelpqZ3lZV0V5WXpSa05HRTBNemszT1RjMVptVmhOelEwWkRBM1lUVXdNVFEnLCAndXJsJzogJ2h0dHBzOi8vYXBpLmdpdGh1Yi5jb20vcmVwb3Mvc2FzYS16L2xvZ3MvZ2l0L2NvbW1pdHMvZGE4ZTdlMzNmODJhYTJjNGQ0YTQzOTc5NzVmZWE3NDRkMDdhNTAxNCcsICdodG1sX3VybCc6ICdodHRwczovL2dpdGh1Yi5jb20vc2FzYS16L2xvZ3MvY29tbWl0L2RhOGU3ZTMzZjgyYWEyYzRkNGE0Mzk3OTc1ZmVhNzQ0ZDA3YTUwMTQnLCAnYXV0aG9yJzogeyduYW1lJzogJ1Nhc2EnLCAnZW1haWwnOiAnOTM0OTQ2ODIrc2FzYS16QHVzZXJzLm5vcmVwbHkuZ2l0aHViLmNvbScsICdkYXRlJzogJzIwMjUtMDEtMDlUMTQ6MzU6NTVaJ30sICdjb21taXR0ZXInOiB7J25hbWUnOiAnU2FzYScsICdlbWFpbCc6ICc5MzQ5NDY4MitzYXNhLXpAdXNlcnMubm9yZXBseS5naXRodWIuY29tJywgJ2RhdGUnOiAnMjAyNS0wMS0wOVQxNDozNTo1NVonfSwgJ3RyZWUnOiB7J3NoYSc6ICc0YjgyNWRjNjQyY2I2ZWI5YTA2MGU1NGJmOGQ2OTI4OGZiZWU0OTA0JywgJ3VybCc6ICdodHRwczovL2FwaS5naXRodWIuY29tL3JlcG9zL3Nhc2Etei9sb2dzL2dpdC90cmVlcy80YjgyNWRjNjQyY2I2ZWI5YTA2MGU1NGJmOGQ2OTI4OGZiZWU0OTA0J30sICdtZXNzYWdlJzogJ0JyaXNhbmplIGxvZyBmYWpsYScsICdwYXJlbnRzJzogW3snc2hhJzogJzM5MGUzZGVlZGFmMTRkNGFjNWNkY2U4OGQ1MjQxNDJkMWMyMjk4NmQnLCAndXJsJzogJ2h0dHBzOi8vYXBpLmdpdGh1Yi5jb20vcmVwb3Mvc2FzYS16L2xvZ3MvZ2l0L2NvbW1pdHMvMzkwZTNkZWVkYWYxNGQ0YWM1Y2RjZTg4ZDUyNDE0MmQxYzIyOTg2ZCcsICdodG1sX3VybCc6ICdodHRwczovL2dpdGh1Yi5jb20vc2FzYS16L2xvZ3MvY29tbWl0LzM5MGUzZGVlZGFmMTRkNGFjNWNkY2U4OGQ1MjQxNDJkMWMyMjk4NmQnfV0sICd2ZXJpZmljYXRpb24nOiB7J3ZlcmlmaWVkJzogRmFsc2UsICdyZWFzb24nOiAndW5zaWduZWQnLCAnc2lnbmF0dXJlJzogTm9uZSwgJ3BheWxvYWQnOiBOb25lLCAndmVyaWZpZWRfYXQnOiBOb25lfX19ClsyMDI1LTAxLTA5VDE1OjM1OjU1LjY1NjcxOV0gRmFqbCBuYSBHaXRIdWItdSBzYSBTSEEgdnJlZG5vxaHEh3UgOGIxMzc4OTE3OTFmZTk2OTI3YWQ3OGU2NGIwYWFkN2JkZWQwOGJkYyBqZSBvYnJpc2FuLgpbMjAyNS0wMS0wOVQxNTozNTo1NS42NTc2NzddIEZhamwgdXNwZcWhbm8gb2JyaXNhbi4gUG9rdcWhYWogdXBsb2FkLWEgbm92b2cgZmFqbGEuCg==', 'branch': 'main'}
[2025-01-09T15:35:55.658109] Slanje zahteva za upload logova.
[2025-01-09T15:35:56.471282] Odgovor API-ja dobijen, status kod: 201
[2025-01-09T15:35:56.471440] Uspešno uploadovani logovi: {'content': {'name': 'log.txt', 'path': 'log.txt', 'sha': 'bcf8c761a4a0dc40f226f52d0541279cf92f8f63', 'size': 5938, 'url': 'https://api.github.com/repos/sasa-z/logs/contents/log.txt?ref=main', 'html_url': 'https://github.com/sasa-z/logs/blob/main/log.txt', 'git_url': 'https://api.github.com/repos/sasa-z/logs/git/blobs/bcf8c761a4a0dc40f226f52d0541279cf92f8f63', 'download_url': 'https://raw.githubusercontent.com/sasa-z/logs/main/log.txt', 'type': 'file', '_links': {'self': 'https://api.github.com/repos/sasa-z/logs/contents/log.txt?ref=main', 'git': 'https://api.github.com/repos/sasa-z/logs/git/blobs/bcf8c761a4a0dc40f226f52d0541279cf92f8f63', 'html': 'https://github.com/sasa-z/logs/blob/main/log.txt'}}, 'commit': {'sha': '300b43e07561418323a9fc104e5815c7d28cd3db', 'node_id': 'C_kwDONoBLLNoAKDMwMGI0M2UwNzU2MTQxODMyM2E5ZmMxMDRlNTgxNWM3ZDI4Y2QzZGI', 'url': 'https://api.github.com/repos/sasa-z/logs/git/commits/300b43e07561418323a9fc104e5815c7d28cd3db', 'html_url': 'https://github.com/sasa-z/logs/commit/300b43e07561418323a9fc104e5815c7d28cd3db', 'author': {'name': 'Sasa', 'email': '93494682+sasa-z@users.noreply.github.com', 'date': '2025-01-09T14:35:56Z'}, 'committer': {'name': 'Sasa', 'email': '93494682+sasa-z@users.noreply.github.com', 'date': '2025-01-09T14:35:56Z'}, 'tree': {'sha': 'ffc60175f0ca26a5ec39890cf84d39d5ae56b095', 'url': 'https://api.github.com/repos/sasa-z/logs/git/trees/ffc60175f0ca26a5ec39890cf84d39d5ae56b095'}, 'message': 'Dodati logovi', 'parents': [{'sha': 'da8e7e33f82aa2c4d4a4397975fea744d07a5014', 'url': 'https://api.github.com/repos/sasa-z/logs/git/commits/da8e7e33f82aa2c4d4a4397975fea744d07a5014', 'html_url': 'https://github.com/sasa-z/logs/commit/da8e7e33f82aa2c4d4a4397975fea744d07a5014'}], 'verification': {'verified': False, 'reason': 'unsigned', 'signature': None, 'payload': None, 'verified_at': None}}}
[2025-01-09T15:35:56.472235] Logovi uspešno uploadovani na GitHub pri pokretanju aplikacije.
[2025-01-09T15:35:56.605606] Pokretanje Flask aplikacije
[2025-01-09T15:35:56.605717] Inicijalizacija logova pri pokretanju aplikacije
[2025-01-09T15:35:56.605761] Početak funkcije get_pull_requests.
[2025-01-09T15:35:56.605805] Slanje zahteva ka API-ju sa params: {'state': 'open', 'per_page': 100}
[2025-01-09T15:35:57.308667] Odgovor API-ja dobijen, status kod: 200
[2025-01-09T15:35:57.311128] Dohvaćen broj pull requestova: 22
[2025-01-09T15:35:57.311228] Uspešno dohvaćeni pull requestovi.
[2025-01-09T15:35:57.312415] Dohvaćeni pull requestovi pri inicijalizaciji: [{'title': 'Docs: Add support for Adobe Analytics in documentation', 'num': 4379, 'link': 'https://github.com/boto/boto3/pull/4379'}, {'title': 'docs: Enhance Docs with S3 Examples of Generating Presigned URLs with Original File Names and Client Context Manager', 'num': 4377, 'link': 'https://github.com/boto/boto3/pull/4377'}, {'title': 'Removes inline scripts and inline styles to make it compatible with the newly added security headers', 'num': 4369, 'link': 'https://github.com/boto/boto3/pull/4369'}, {'title': 'Changed description for after-call Boto3 specific events', 'num': 4353, 'link': 'https://github.com/boto/boto3/pull/4353'}, {'title': 'Fixed style consistency in the set up part example of readme.', 'num': 4349, 'link': 'https://github.com/boto/boto3/pull/4349'}, {'title': 'Make ClientError accessible from S3UploadFailedError', 'num': 4346, 'link': 'https://github.com/boto/boto3/pull/4346'}, {'title': 'update the documentation for creating s3 bucket to address the region mismatch issue.', 'num': 4337, 'link': 'https://github.com/boto/boto3/pull/4337'}, {'title': 'Use built-in `logging.NullHandler`', 'num': 4231, 'link': 'https://github.com/boto/boto3/pull/4231'}, {'title': 'Add note on logical operators', 'num': 4141, 'link': 'https://github.com/boto/boto3/pull/4141'}, {'title': 'doc: add build_full_result() to Paginator', 'num': 4078, 'link': 'https://github.com/boto/boto3/pull/4078'}, {'title': 'Explain how MaxItems affects pagination in boto3', 'num': 4073, 'link': 'https://github.com/boto/boto3/pull/4073'}, {'title': 'Fix inject_condition_expressions transform for nested inputs such as …', 'num': 4054, 'link': 'https://github.com/boto/boto3/pull/4054'}, {'title': 'Add codespell: pre-commit, workflow (to just detect); make it fix found already present typos', 'num': 4035, 'link': 'https://github.com/boto/boto3/pull/4035'}, {'title': 'DynamoDB: Add support for TransactWriteItems for boto3 resource', 'num': 4010, 'link': 'https://github.com/boto/boto3/pull/4010'}, {'title': 'Updated docstrings: added clarification about Fileobj `close` behaviour', 'num': 3968, 'link': 'https://github.com/boto/boto3/pull/3968'}, {'title': 'Improve documentation for multiprocessing/threading', 'num': 3831, 'link': 'https://github.com/boto/boto3/pull/3831'}, {'title': 'docs: Added description of Sigv4 when generating PreSigned url', 'num': 3688, 'link': 'https://github.com/boto/boto3/pull/3688'}, {'title': 'refactor: rename "_get_default_session" to support use as public method', 'num': 3651, 'link': 'https://github.com/boto/boto3/pull/3651'}, {'title': "Returned future result in S3Transfer's download and upload", 'num': 3316, 'link': 'https://github.com/boto/boto3/pull/3316'}, {'title': 'Implement condition/attr __repr__', 'num': 3254, 'link': 'https://github.com/boto/boto3/pull/3254'}, {'title': 'Add Session.assume_role method', 'num': 3253, 'link': 'https://github.com/boto/boto3/pull/3253'}, {'title': 'Fix ExtraArgs supported by Bucket.copy', 'num': 3172, 'link': 'https://github.com/boto/boto3/pull/3172'}]
[2025-01-09T15:35:57.312518] Pokušaj dohvatanja SHA vrednosti fajla.
[2025-01-09T15:35:57.312560] Dohvatanje SHA vrednosti fajla sa URL-a: https://api.github.com/repos/sasa-z/logs/contents/log.txt
[2025-01-09T15:35:57.642388] SHA vrednost dobijena: bcf8c761a4a0dc40f226f52d0541279cf92f8f63
[2025-01-09T15:35:57.643310] SHA vrednost dobijena: bcf8c761a4a0dc40f226f52d0541279cf92f8f63
[2025-01-09T15:35:57.643557] SHA vrednost dobijena: bcf8c761a4a0dc40f226f52d0541279cf92f8f63. Pokušaj brisanja fajla sa GitHub-a.
[2025-01-09T15:35:57.643602] Pokušaj brisanja fajla sa URL-a: https://api.github.com/repos/sasa-z/logs/contents/log.txt sa SHA: bcf8c761a4a0dc40f226f52d0541279cf92f8f63
[2025-01-09T15:35:57.643646] Podaci za brisanje: {'message': 'Brisanje log fajla', 'sha': 'bcf8c761a4a0dc40f226f52d0541279cf92f8f63'}
[2025-01-09T15:35:58.221907] Status kod odgovora za brisanje: 200
[2025-01-09T15:35:58.222087] Odgovor za brisanje: {'content': None, 'commit': {'sha': 'd583de7c85ec671321d79a9686dc4e614205a429', 'node_id': 'C_kwDONoBLLNoAKGQ1ODNkZTdjODVlYzY3MTMyMWQ3OWE5Njg2ZGM0ZTYxNDIwNWE0Mjk', 'url': 'https://api.github.com/repos/sasa-z/logs/git/commits/d583de7c85ec671321d79a9686dc4e614205a429', 'html_url': 'https://github.com/sasa-z/logs/commit/d583de7c85ec671321d79a9686dc4e614205a429', 'author': {'name': 'Sasa', 'email': '93494682+sasa-z@users.noreply.github.com', 'date': '2025-01-09T14:35:58Z'}, 'committer': {'name': 'Sasa', 'email': '93494682+sasa-z@users.noreply.github.com', 'date': '2025-01-09T14:35:58Z'}, 'tree': {'sha': '4b825dc642cb6eb9a060e54bf8d69288fbee4904', 'url': 'https://api.github.com/repos/sasa-z/logs/git/trees/4b825dc642cb6eb9a060e54bf8d69288fbee4904'}, 'message': 'Brisanje log fajla', 'parents': [{'sha': '300b43e07561418323a9fc104e5815c7d28cd3db', 'url': 'https://api.github.com/repos/sasa-z/logs/git/commits/300b43e07561418323a9fc104e5815c7d28cd3db', 'html_url': 'https://github.com/sasa-z/logs/commit/300b43e07561418323a9fc104e5815c7d28cd3db'}], 'verification': {'verified': False, 'reason': 'unsigned', 'signature': None, 'payload': None, 'verified_at': None}}}
[2025-01-09T15:35:58.222144] Fajl na GitHub-u sa SHA vrednošću bcf8c761a4a0dc40f226f52d0541279cf92f8f63 je obrisan.
[2025-01-09T15:35:58.223046] Fajl uspešno obrisan. Pokušaj upload-a novog fajla.
[2025-01-09T15:35:58.223442] Podaci za upload: {'message': 'Dodati logovi', 'content': '', 'branch': 'main'}
[2025-01-09T15:35:58.223760] Slanje zahteva za upload logova.
[2025-01-09T15:35:58.910025] Odgovor API-ja dobijen, status kod: 201
[2025-01-09T15:35:58.910191] Uspešno uploadovani logovi: {'content': {'name': 'log.txt', 'path': 'log.txt', 'sha': 'eb0012040df53e06e4f7a9d9681c91506fbc6b4f', 'size': 22043, 'url': 'https://api.github.com/repos/sasa-z/logs/contents/log.txt?ref=main', 'html_url': 'https://github.com/sasa-z/logs/blob/main/log.txt', 'git_url': 'https://api.github.com/repos/sasa-z/logs/git/blobs/eb0012040df53e06e4f7a9d9681c91506fbc6b4f', 'download_url': 'https://raw.githubusercontent.com/sasa-z/logs/main/log.txt', 'type': 'file', '_links': {'self': 'https://api.github.com/repos/sasa-z/logs/contents/log.txt?ref=main', 'git': 'https://api.github.com/repos/sasa-z/logs/git/blobs/eb0012040df53e06e4f7a9d9681c91506fbc6b4f', 'html': 'https://github.com/sasa-z/logs/blob/main/log.txt'}}, 'commit': {'sha': 'e1bb69e541d235d830d726626f1e7be3761e00dd', 'node_id': 'C_kwDONoBLLNoAKGUxYmI2OWU1NDFkMjM1ZDgzMGQ3MjY2MjZmMWU3YmUzNzYxZTAwZGQ', 'url': 'https://api.github.com/repos/sasa-z/logs/git/commits/e1bb69e541d235d830d726626f1e7be3761e00dd', 'html_url': 'https://github.com/sasa-z/logs/commit/e1bb69e541d235d830d726626f1e7be3761e00dd', 'author': {'name': 'Sasa', 'email': '93494682+sasa-z@users.noreply.github.com', 'date': '2025-01-09T14:35:59Z'}, 'committer': {'name': 'Sasa', 'email': '93494682+sasa-z@users.noreply.github.com', 'date': '2025-01-09T14:35:59Z'}, 'tree': {'sha': '965dc62e31bf78abb77d37d96697a0c56f64dccb', 'url': 'https://api.github.com/repos/sasa-z/logs/git/trees/965dc62e31bf78abb77d37d96697a0c56f64dccb'}, 'message': 'Dodati logovi', 'parents': [{'sha': 'd583de7c85ec671321d79a9686dc4e614205a429', 'url': 'https://api.github.com/repos/sasa-z/logs/git/commits/d583de7c85ec671321d79a9686dc4e614205a429', 'html_url': 'https://github.com/sasa-z/logs/commit/d583de7c85ec671321d79a9686dc4e614205a429'}], 'verification': {'verified': False, 'reason': 'unsigned', 'signature': None, 'payload': None, 'verified_at': None}}}
[2025-01-09T15:35:58.911212] Logovi uspešno uploadovani na GitHub pri pokretanju aplikacije.
[2025-01-09T15:36:27.155549] Pristup ruti '/'
[2025-01-09T15:36:27.170640] Pristup ruti '/pull_requests'
[2025-01-09T15:36:27.170832] Dohvaćanje pull requestova za state: open
[2025-01-09T15:36:27.170881] Početak funkcije get_pull_requests.
[2025-01-09T15:36:27.170935] Slanje zahteva ka API-ju sa params: {'state': 'open', 'per_page': 100}
[2025-01-09T15:36:27.971722] Odgovor API-ja dobijen, status kod: 200
[2025-01-09T15:36:27.973808] Dohvaćen broj pull requestova: 22
[2025-01-09T15:36:27.973896] Uspešno dohvaćeni pull requestovi.
[2025-01-09T15:36:27.974911] Dohvaćeni pull requestovi: [{'title': 'Docs: Add support for Adobe Analytics in documentation', 'num': 4379, 'link': 'https://github.com/boto/boto3/pull/4379'}, {'title': 'docs: Enhance Docs with S3 Examples of Generating Presigned URLs with Original File Names and Client Context Manager', 'num': 4377, 'link': 'https://github.com/boto/boto3/pull/4377'}, {'title': 'Removes inline scripts and inline styles to make it compatible with the newly added security headers', 'num': 4369, 'link': 'https://github.com/boto/boto3/pull/4369'}, {'title': 'Changed description for after-call Boto3 specific events', 'num': 4353, 'link': 'https://github.com/boto/boto3/pull/4353'}, {'title': 'Fixed style consistency in the set up part example of readme.', 'num': 4349, 'link': 'https://github.com/boto/boto3/pull/4349'}, {'title': 'Make ClientError accessible from S3UploadFailedError', 'num': 4346, 'link': 'https://github.com/boto/boto3/pull/4346'}, {'title': 'update the documentation for creating s3 bucket to address the region mismatch issue.', 'num': 4337, 'link': 'https://github.com/boto/boto3/pull/4337'}, {'title': 'Use built-in `logging.NullHandler`', 'num': 4231, 'link': 'https://github.com/boto/boto3/pull/4231'}, {'title': 'Add note on logical operators', 'num': 4141, 'link': 'https://github.com/boto/boto3/pull/4141'}, {'title': 'doc: add build_full_result() to Paginator', 'num': 4078, 'link': 'https://github.com/boto/boto3/pull/4078'}, {'title': 'Explain how MaxItems affects pagination in boto3', 'num': 4073, 'link': 'https://github.com/boto/boto3/pull/4073'}, {'title': 'Fix inject_condition_expressions transform for nested inputs such as …', 'num': 4054, 'link': 'https://github.com/boto/boto3/pull/4054'}, {'title': 'Add codespell: pre-commit, workflow (to just detect); make it fix found already present typos', 'num': 4035, 'link': 'https://github.com/boto/boto3/pull/4035'}, {'title': 'DynamoDB: Add support for TransactWriteItems for boto3 resource', 'num': 4010, 'link': 'https://github.com/boto/boto3/pull/4010'}, {'title': 'Updated docstrings: added clarification about Fileobj `close` behaviour', 'num': 3968, 'link': 'https://github.com/boto/boto3/pull/3968'}, {'title': 'Improve documentation for multiprocessing/threading', 'num': 3831, 'link': 'https://github.com/boto/boto3/pull/3831'}, {'title': 'docs: Added description of Sigv4 when generating PreSigned url', 'num': 3688, 'link': 'https://github.com/boto/boto3/pull/3688'}, {'title': 'refactor: rename "_get_default_session" to support use as public method', 'num': 3651, 'link': 'https://github.com/boto/boto3/pull/3651'}, {'title': "Returned future result in S3Transfer's download and upload", 'num': 3316, 'link': 'https://github.com/boto/boto3/pull/3316'}, {'title': 'Implement condition/attr __repr__', 'num': 3254, 'link': 'https://github.com/boto/boto3/pull/3254'}, {'title': 'Add Session.assume_role method', 'num': 3253, 'link': 'https://github.com/boto/boto3/pull/3253'}, {'title': 'Fix ExtraArgs supported by Bucket.copy', 'num': 3172, 'link': 'https://github.com/boto/boto3/pull/3172'}]
[2025-01-09T15:36:27.974988] Pokušaj dohvatanja SHA vrednosti fajla.
[2025-01-09T15:36:27.975047] Dohvatanje SHA vrednosti fajla sa URL-a: https://api.github.com/repos/sasa-z/logs/contents/log.txt
[2025-01-09T15:36:28.279450] SHA vrednost dobijena: 8b137891791fe96927ad78e64b0aad7bded08bdc
[2025-01-09T15:36:28.280321] SHA vrednost dobijena: 8b137891791fe96927ad78e64b0aad7bded08bdc
[2025-01-09T15:36:28.280536] SHA vrednost dobijena: 8b137891791fe96927ad78e64b0aad7bded08bdc. Pokušaj brisanja fajla sa GitHub-a.
[2025-01-09T15:36:28.280591] Pokušaj brisanja fajla sa URL-a: https://api.github.com/repos/sasa-z/logs/contents/log.txt sa SHA: 8b137891791fe96927ad78e64b0aad7bded08bdc
[2025-01-09T15:36:28.280652] Podaci za brisanje: {'message': 'Brisanje log fajla', 'sha': '8b137891791fe96927ad78e64b0aad7bded08bdc'}
[2025-01-09T15:36:28.917219] Status kod odgovora za brisanje: 200
[2025-01-09T15:36:28.917390] Odgovor za brisanje: {'content': None, 'commit': {'sha': '9c9ba992b7cb24970416c22271c5592bd6bf53d0', 'node_id': 'C_kwDONoBLLNoAKDljOWJhOTkyYjdjYjI0OTcwNDE2YzIyMjcxYzU1OTJiZDZiZjUzZDA', 'url': 'https://api.github.com/repos/sasa-z/logs/git/commits/9c9ba992b7cb24970416c22271c5592bd6bf53d0', 'html_url': 'https://github.com/sasa-z/logs/commit/9c9ba992b7cb24970416c22271c5592bd6bf53d0', 'author': {'name': 'Sasa', 'email': '93494682+sasa-z@users.noreply.github.com', 'date': '2025-01-09T14:36:29Z'}, 'committer': {'name': 'Sasa', 'email': '93494682+sasa-z@users.noreply.github.com', 'date': '2025-01-09T14:36:29Z'}, 'tree': {'sha': '4b825dc642cb6eb9a060e54bf8d69288fbee4904', 'url': 'https://api.github.com/repos/sasa-z/logs/git/trees/4b825dc642cb6eb9a060e54bf8d69288fbee4904'}, 'message': 'Brisanje log fajla', 'parents': [{'sha': '64121e04cc7e905f7a7d92cea76c36932e7c00ff', 'url': 'https://api.github.com/repos/sasa-z/logs/git/commits/64121e04cc7e905f7a7d92cea76c36932e7c00ff', 'html_url': 'https://github.com/sasa-z/logs/commit/64121e04cc7e905f7a7d92cea76c36932e7c00ff'}], 'verification': {'verified': False, 'reason': 'unsigned', 'signature': None, 'payload': None, 'verified_at': None}}}
[2025-01-09T15:36:28.917449] Fajl na GitHub-u sa SHA vrednošću 8b137891791fe96927ad78e64b0aad7bded08bdc je obrisan.
[2025-01-09T15:36:28.918305] Fajl uspešno obrisan. Pokušaj upload-a novog fajla.
[2025-01-09T15:36:28.918831] Podaci za upload: {'message': 'Dodati logovi', 'content': '', 'branch': 'main'}
[2025-01-09T15:36:28.919406] Slanje zahteva za upload logova.
[2025-01-09T15:36:29.708616] Odgovor API-ja dobijen, status kod: 201
[2025-01-09T15:36:29.708838] Uspešno uploadovani logovi: {'content': {'name': 'log.txt', 'path': 'log.txt', 'sha': '03f509eacba99dcd9760b26717a91af2da5fcee4', 'size': 59643, 'url': 'https://api.github.com/repos/sasa-z/logs/contents/log.txt?ref=main', 'html_url': 'https://github.com/sasa-z/logs/blob/main/log.txt', 'git_url': 'https://api.github.com/repos/sasa-z/logs/git/blobs/03f509eacba99dcd9760b26717a91af2da5fcee4', 'download_url': 'https://raw.githubusercontent.com/sasa-z/logs/main/log.txt', 'type': 'file', '_links': {'self': 'https://api.github.com/repos/sasa-z/logs/contents/log.txt?ref=main', 'git': 'https://api.github.com/repos/sasa-z/logs/git/blobs/03f509eacba99dcd9760b26717a91af2da5fcee4', 'html': 'https://github.com/sasa-z/logs/blob/main/log.txt'}}, 'commit': {'sha': '8b91e62f0d1f2381eae662f14d4e2fb256602ceb', 'node_id': 'C_kwDONoBLLNoAKDhiOTFlNjJmMGQxZjIzODFlYWU2NjJmMTRkNGUyZmIyNTY2MDJjZWI', 'url': 'https://api.github.com/repos/sasa-z/logs/git/commits/8b91e62f0d1f2381eae662f14d4e2fb256602ceb', 'html_url': 'https://github.com/sasa-z/logs/commit/8b91e62f0d1f2381eae662f14d4e2fb256602ceb', 'author': {'name': 'Sasa', 'email': '93494682+sasa-z@users.noreply.github.com', 'date': '2025-01-09T14:36:29Z'}, 'committer': {'name': 'Sasa', 'email': '93494682+sasa-z@users.noreply.github.com', 'date': '2025-01-09T14:36:29Z'}, 'tree': {'sha': '9118f788f51002aab8af606640ebbf081c5ac07e', 'url': 'https://api.github.com/repos/sasa-z/logs/git/trees/9118f788f51002aab8af606640ebbf081c5ac07e'}, 'message': 'Dodati logovi', 'parents': [{'sha': '9c9ba992b7cb24970416c22271c5592bd6bf53d0', 'url': 'https://api.github.com/repos/sasa-z/logs/git/commits/9c9ba992b7cb24970416c22271c5592bd6bf53d0', 'html_url': 'https://github.com/sasa-z/logs/commit/9c9ba992b7cb24970416c22271c5592bd6bf53d0'}], 'verification': {'verified': False, 'reason': 'unsigned', 'signature': None, 'payload': None, 'verified_at': None}}}
[2025-01-09T15:36:29.709808] Logovi uspešno uploadovani na GitHub.
[2025-01-09T15:36:31.992248] Pristup ruti '/pull_requests'
[2025-01-09T15:36:31.992447] Dohvaćanje pull requestova za state: closed
[2025-01-09T15:36:31.992508] Početak funkcije get_pull_requests.
[2025-01-09T15:36:31.992551] Slanje zahteva ka API-ju sa params: {'state': 'closed', 'per_page': 100}
[2025-01-09T15:36:33.515711] Odgovor API-ja dobijen, status kod: 200
[2025-01-09T15:36:33.527251] Dohvaćen broj pull requestova: 100
[2025-01-09T15:36:33.527551] Uspešno dohvaćeni pull requestovi.
[2025-01-09T15:36:33.529766] Dohvaćeni pull requestovi: [{'title': 'Bump aws-actions/stale-issue-cleanup from 2017b87caa8e25014362d434a980d60fa758f3af to 413d85a1603df4f0a8158f5f3c8204ab1691313e', 'num': 4371, 'link': 'https://github.com/boto/boto3/pull/4371'}, {'title': 'Bump aws-actions/closed-issue-message from 80edfc24bdf1283400eb04d20a8a605ae8bf7d48 to 37548691e7cc75ba58f85c9f873f9eee43590449', 'num': 4358, 'link': 'https://github.com/boto/boto3/pull/4358'}, {'title': 'Revert "Add client exceptions to boto3 docs"', 'num': 4354, 'link': 'https://github.com/boto/boto3/pull/4354'}, {'title': 'Add client exceptions to boto3 docs', 'num': 4343, 'link': 'https://github.com/boto/boto3/pull/4343'}, {'title': 'Remove macOS fallback now that setup-python issue is resolved', 'num': 4340, 'link': 'https://github.com/boto/boto3/pull/4340'}, {'title': 'Added container credential provider to the credential precedence documentation', 'num': 4338, 'link': 'https://github.com/boto/boto3/pull/4338'}, {'title': 'Update bucket names in examples', 'num': 4325, 'link': 'https://github.com/boto/boto3/pull/4325'}, {'title': 'Bump actions/setup-python from 5.2.0 to 5.3.0', 'num': 4319, 'link': 'https://github.com/boto/boto3/pull/4319'}, {'title': 'Bump github/codeql-action from 3.26.0 to 3.27.0', 'num': 4318, 'link': 'https://github.com/boto/boto3/pull/4318'}, {'title': 'Document sigv4a signing region set', 'num': 4306, 'link': 'https://github.com/boto/boto3/pull/4306'}, {'title': 'Add support for Python 3.13', 'num': 4296, 'link': 'https://github.com/boto/boto3/pull/4296'}, {'title': 'S3 bucket names rename project', 'num': 4291, 'link': 'https://github.com/boto/boto3/pull/4291'}, {'title': 'Bump actions/checkout from 4.1.0 to 4.2.0', 'num': 4285, 'link': 'https://github.com/boto/boto3/pull/4285'}, {'title': 'Update Boto3 Credentials Documentation', 'num': 4271, 'link': 'https://github.com/boto/boto3/pull/4271'}, {'title': 'chore: Modified bug issue template to add checkbox to report potential regression.', 'num': 4264, 'link': 'https://github.com/boto/boto3/pull/4264'}, {'title': 'Bump actions/setup-python from 5.1.0 to 5.2.0', 'num': 4254, 'link': 'https://github.com/boto/boto3/pull/4254'}, {'title': 'Bump github/codeql-action from 3.25.6 to 3.26.0', 'num': 4240, 'link': 'https://github.com/boto/boto3/pull/4240'}, {'title': 'Update setuptools', 'num': 4219, 'link': 'https://github.com/boto/boto3/pull/4219'}, {'title': 'Updating contributing guide', 'num': 4215, 'link': 'https://github.com/boto/boto3/pull/4215'}, {'title': 'Bump aws-actions/closed-issue-message from 8b6324312193476beecf11f8e8539d73a3553bf4 to 80edfc24bdf1283400eb04d20a8a605ae8bf7d48', 'num': 4214, 'link': 'https://github.com/boto/boto3/pull/4214'}, {'title': 'Fix CI for Python >= 3.12', 'num': 4208, 'link': 'https://github.com/boto/boto3/pull/4208'}, {'title': 'Bump setuptools from 67.8.0 to 70.0.0', 'num': 4204, 'link': 'https://github.com/boto/boto3/pull/4204'}, {'title': 'Bump certifi from 2024.6.2 to 2024.7.4', 'num': 4190, 'link': 'https://github.com/boto/boto3/pull/4190'}, {'title': 'Bump aws-actions/stale-issue-cleanup from 389be0117d7661840b887276b5da1cc6ddf95c8a to 2017b87caa8e25014362d434a980d60fa758f3af', 'num': 4184, 'link': 'https://github.com/boto/boto3/pull/4184'}, {'title': 'Do not test opsworks collections', 'num': 4182, 'link': 'https://github.com/boto/boto3/pull/4182'}, {'title': 'Enhance the code standard and readability', 'num': 4176, 'link': 'https://github.com/boto/boto3/pull/4176'}, {'title': 'Bump aws-actions/stale-issue-cleanup from 389be0117d7661840b887276b5da1cc6ddf95c8a to 275ec4b3bec5f511535ffd03098f33f95de2ddb1', 'num': 4175, 'link': 'https://github.com/boto/boto3/pull/4175'}, {'title': 'Add a lock file for requirements-docs.txt', 'num': 4171, 'link': 'https://github.com/boto/boto3/pull/4171'}, {'title': 'Add .git-blame-ignore-revs', 'num': 4168, 'link': 'https://github.com/boto/boto3/pull/4168'}, {'title': 'Ruff', 'num': 4161, 'link': 'https://github.com/boto/boto3/pull/4161'}, {'title': 'Add caveat about default session', 'num': 4157, 'link': 'https://github.com/boto/boto3/pull/4157'}, {'title': 'Start testing on 3.13 beta build', 'num': 4144, 'link': 'https://github.com/boto/boto3/pull/4144'}, {'title': 'Bump github/codeql-action from 2.13.4 to 3.25.6', 'num': 4136, 'link': 'https://github.com/boto/boto3/pull/4136'}, {'title': 'Add docs for AWS_SDK_UA_APP_ID environment variable', 'num': 4130, 'link': 'https://github.com/boto/boto3/pull/4130'}, {'title': 'Update s3 `download_file` example', 'num': 4128, 'link': 'https://github.com/boto/boto3/pull/4128'}, {'title': 'Update waiter description', 'num': 4108, 'link': 'https://github.com/boto/boto3/pull/4108'}, {'title': 'Update IAM references', 'num': 4100, 'link': 'https://github.com/boto/boto3/pull/4100'}, {'title': 'Create harness-dlc.yml', 'num': 4098, 'link': 'https://github.com/boto/boto3/pull/4098'}, {'title': 'Add missing changelog entry', 'num': 4096, 'link': 'https://github.com/boto/boto3/pull/4096'}, {'title': 'Move 3.8 and 3.9 builds back to macos-13', 'num': 4094, 'link': 'https://github.com/boto/boto3/pull/4094'}, {'title': 'Fixing a little typo in quickstart page', 'num': 4091, 'link': 'https://github.com/boto/boto3/pull/4091'}, {'title': 'Bump aws-github-ops/handle-stale-discussions from 1.5.2 to 1.6', 'num': 4085, 'link': 'https://github.com/boto/boto3/pull/4085'}, {'title': 'ttest', 'num': 4074, 'link': 'https://github.com/boto/boto3/pull/4074'}, {'title': 'Update wheel dev dependency', 'num': 4071, 'link': 'https://github.com/boto/boto3/pull/4071'}, {'title': 'Upgrade pytest and associated test packages', 'num': 4070, 'link': 'https://github.com/boto/boto3/pull/4070'}, {'title': 'Bump actions/setup-python from 5.0.0 to 5.1.0', 'num': 4069, 'link': 'https://github.com/boto/boto3/pull/4069'}, {'title': 'Fix boto3 resource reference docs', 'num': 4050, 'link': 'https://github.com/boto/boto3/pull/4050'}, {'title': 'Update python version in supported version sentence', 'num': 4049, 'link': 'https://github.com/boto/boto3/pull/4049'}, {'title': 'Minor GitHub workflow changes', 'num': 3998, 'link': 'https://github.com/boto/boto3/pull/3998'}, {'title': 'Up minimum version of CRT required to support s3express', 'num': 3979, 'link': 'https://github.com/boto/boto3/pull/3979'}, {'title': 'Added bugs to the stale issue automation', 'num': 3976, 'link': 'https://github.com/boto/boto3/pull/3976'}, {'title': 'Bump actions/setup-python from 4.7.0 to 5.0.0', 'num': 3969, 'link': 'https://github.com/boto/boto3/pull/3969'}, {'title': 'Pre commit updates', 'num': 3965, 'link': 'https://github.com/boto/boto3/pull/3965'}, {'title': 'Raise s3transfer floor to 0.8.2', 'num': 3960, 'link': 'https://github.com/boto/boto3/pull/3960'}, {'title': 'Add additonal tests for minimum version check', 'num': 3958, 'link': 'https://github.com/boto/boto3/pull/3958'}, {'title': 'Add version floor for transfer feature', 'num': 3957, 'link': 'https://github.com/boto/boto3/pull/3957'}, {'title': 'Improve UnknownAPIVersionError exception message', 'num': 3955, 'link': 'https://github.com/boto/boto3/pull/3955'}, {'title': 'Deprecate Python 3.7 Support', 'num': 3952, 'link': 'https://github.com/boto/boto3/pull/3952'}, {'title': 'fix CRT debug log', 'num': 3950, 'link': 'https://github.com/boto/boto3/pull/3950'}, {'title': 'Add changelog and version bump information', 'num': 3948, 'link': 'https://github.com/boto/boto3/pull/3948'}, {'title': 'Add CRT Transfer option to Boto3 on select instance types', 'num': 3946, 'link': 'https://github.com/boto/boto3/pull/3946'}, {'title': 'add credential scope', 'num': 3926, 'link': 'https://github.com/boto/boto3/pull/3926'}, {'title': 'Fix changelog', 'num': 3919, 'link': 'https://github.com/boto/boto3/pull/3919'}, {'title': 'Use list_objects_v2 in the boto3 paginators docs', 'num': 3918, 'link': 'https://github.com/boto/boto3/pull/3918'}, {'title': 'add client context params to boto3 docs', 'num': 3911, 'link': 'https://github.com/boto/boto3/pull/3911'}, {'title': 'Remove period in waiter documentation ', 'num': 3910, 'link': 'https://github.com/boto/boto3/pull/3910'}, {'title': 'Bump aws-actions/stale-issue-cleanup from f290bcce1d77c9abc0357b7faed3c1c7c2f7d78f to 389be0117d7661840b887276b5da1cc6ddf95c8a', 'num': 3909, 'link': 'https://github.com/boto/boto3/pull/3909'}, {'title': 'update ci to use GA python 3.12', 'num': 3908, 'link': 'https://github.com/boto/boto3/pull/3908'}, {'title': 'Update config guide to include client context params usage', 'num': 3894, 'link': 'https://github.com/boto/boto3/pull/3894'}, {'title': 'add `aws_account_id` to boto3 session', 'num': 3888, 'link': 'https://github.com/boto/boto3/pull/3888'}, {'title': 'Jagannath bite patch 2', 'num': 3887, 'link': 'https://github.com/boto/boto3/pull/3887'}, {'title': 'Bump actions/checkout from 3.5.0 to 4.1.0', 'num': 3878, 'link': 'https://github.com/boto/boto3/pull/3878'}, {'title': 'Bump actions/checkout from 3 to 4', 'num': 3877, 'link': 'https://github.com/boto/boto3/pull/3877'}, {'title': 'Add dependabot configuration for actions', 'num': 3875, 'link': 'https://github.com/boto/boto3/pull/3875'}, {'title': 'Fix pins on GHA workflows', 'num': 3874, 'link': 'https://github.com/boto/boto3/pull/3874'}, {'title': 'Update quickstart - close file via context manager.', 'num': 3867, 'link': 'https://github.com/boto/boto3/pull/3867'}, {'title': 'Add internal links to S3 upload/download args', 'num': 3863, 'link': 'https://github.com/boto/boto3/pull/3863'}, {'title': 'Fix broken docs fragment', 'num': 3859, 'link': 'https://github.com/boto/boto3/pull/3859'}, {'title': 'Fix broken docs fragment', 'num': 3858, 'link': 'https://github.com/boto/boto3/pull/3858'}, {'title': 'Fix minor grammar issue in README', 'num': 3855, 'link': 'https://github.com/boto/boto3/pull/3855'}, {'title': 'Fix Environment Variable Naming Convention', 'num': 3853, 'link': 'https://github.com/boto/boto3/pull/3853'}, {'title': 'chore: update auto-closing on stale discussions', 'num': 3838, 'link': 'https://github.com/boto/boto3/pull/3838'}, {'title': 'Disable auto-closing answered discussions', 'num': 3837, 'link': 'https://github.com/boto/boto3/pull/3837'}, {'title': 'Resolve Python 3.12 warnings', 'num': 3825, 'link': 'https://github.com/boto/boto3/pull/3825'}, {'title': 'Add support for Python 3.12', 'num': 3822, 'link': 'https://github.com/boto/boto3/pull/3822'}, {'title': 'Upgrade pytest to 7.4.0', 'num': 3821, 'link': 'https://github.com/boto/boto3/pull/3821'}, {'title': 'Add reference to update item in Dynamo DB', 'num': 3816, 'link': 'https://github.com/boto/boto3/pull/3816'}, {'title': 'Typo double negative', 'num': 3807, 'link': 'https://github.com/boto/boto3/pull/3807'}, {'title': 'Update GHA configurations', 'num': 3790, 'link': 'https://github.com/boto/boto3/pull/3790'}, {'title': 'Add workflow to handle stale discussions', 'num': 3777, 'link': 'https://github.com/boto/boto3/pull/3777'}, {'title': 'Add upcoming deprecation warning for Python 3.7', 'num': 3773, 'link': 'https://github.com/boto/boto3/pull/3773'}, {'title': 'docs: Fix broken Django Project hyperlink', 'num': 3767, 'link': 'https://github.com/boto/boto3/pull/3767'}, {'title': 'chore: update ancient issue bot', 'num': 3734, 'link': 'https://github.com/boto/boto3/pull/3734'}, {'title': 'docs: fix broken hyperlink to examples', 'num': 3730, 'link': 'https://github.com/boto/boto3/pull/3730'}, {'title': 'Keyboard Accessibility Improvements', 'num': 3723, 'link': 'https://github.com/boto/boto3/pull/3723'}, {'title': 'Address that Sigv4 presigned URLs are not properly generated, but SigV2 (default for S3) signatures are valid.', 'num': 3707, 'link': 'https://github.com/boto/boto3/pull/3707'}, {'title': 'Fix changelog', 'num': 3700, 'link': 'https://github.com/boto/boto3/pull/3700'}, {'title': 'Update CONTRIBUTING.rst', 'num': 3696, 'link': 'https://github.com/boto/boto3/pull/3696'}, {'title': 'Address admonition title accessibility issue', 'num': 3687, 'link': 'https://github.com/boto/boto3/pull/3687'}, {'title': 'Add documentation for additional events.', 'num': 3686, 'link': 'https://github.com/boto/boto3/pull/3686'}]
[2025-01-09T15:36:33.530146] Pokušaj dohvatanja SHA vrednosti fajla.
[2025-01-09T15:36:33.530211] Dohvatanje SHA vrednosti fajla sa URL-a: https://api.github.com/repos/sasa-z/logs/contents/log.txt
[2025-01-09T15:36:33.930184] SHA vrednost dobijena: 03f509eacba99dcd9760b26717a91af2da5fcee4
[2025-01-09T15:36:33.931329] SHA vrednost dobijena: 03f509eacba99dcd9760b26717a91af2da5fcee4
[2025-01-09T15:36:33.931399] SHA vrednost dobijena: 03f509eacba99dcd9760b26717a91af2da5fcee4. Pokušaj brisanja fajla sa GitHub-a.
[2025-01-09T15:36:33.931445] Pokušaj brisanja fajla sa URL-a: https://api.github.com/repos/sasa-z/logs/contents/log.txt sa SHA: 03f509eacba99dcd9760b26717a91af2da5fcee4
[2025-01-09T15:36:33.931527] Podaci za brisanje: {'message': 'Brisanje log fajla', 'sha': '03f509eacba99dcd9760b26717a91af2da5fcee4'}
[2025-01-09T15:36:34.518548] Status kod odgovora za brisanje: 200
[2025-01-09T15:36:34.518728] Odgovor za brisanje: {'content': None, 'commit': {'sha': '7979c104a378f69fd676105979a48df2b705da98', 'node_id': 'C_kwDONoBLLNoAKDc5NzljMTA0YTM3OGY2OWZkNjc2MTA1OTc5YTQ4ZGYyYjcwNWRhOTg', 'url': 'https://api.github.com/repos/sasa-z/logs/git/commits/7979c104a378f69fd676105979a48df2b705da98', 'html_url': 'https://github.com/sasa-z/logs/commit/7979c104a378f69fd676105979a48df2b705da98', 'author': {'name': 'Sasa', 'email': '93494682+sasa-z@users.noreply.github.com', 'date': '2025-01-09T14:36:34Z'}, 'committer': {'name': 'Sasa', 'email': '93494682+sasa-z@users.noreply.github.com', 'date': '2025-01-09T14:36:34Z'}, 'tree': {'sha': '4b825dc642cb6eb9a060e54bf8d69288fbee4904', 'url': 'https://api.github.com/repos/sasa-z/logs/git/trees/4b825dc642cb6eb9a060e54bf8d69288fbee4904'}, 'message': 'Brisanje log fajla', 'parents': [{'sha': '8b91e62f0d1f2381eae662f14d4e2fb256602ceb', 'url': 'https://api.github.com/repos/sasa-z/logs/git/commits/8b91e62f0d1f2381eae662f14d4e2fb256602ceb', 'html_url': 'https://github.com/sasa-z/logs/commit/8b91e62f0d1f2381eae662f14d4e2fb256602ceb'}], 'verification': {'verified': False, 'reason': 'unsigned', 'signature': None, 'payload': None, 'verified_at': None}}}
[2025-01-09T15:36:34.518810] Fajl na GitHub-u sa SHA vrednošću 03f509eacba99dcd9760b26717a91af2da5fcee4 je obrisan.
[2025-01-09T15:36:34.519848] Fajl uspešno obrisan. Pokušaj upload-a novog fajla.
[2025-01-09T15:36:34.520592] Podaci za upload: {'message': 'Dodati logovi', 'content': '', 'branch': 'main'}
[2025-01-09T15:36:34.542494] Slanje zahteva za upload logova.
[2025-01-09T15:36:35.552401] Odgovor API-ja dobijen, status kod: 201
[2025-01-09T15:36:35.552629] Uspešno uploadovani logovi: {'content': {'name': 'log.txt', 'path': 'log.txt', 'sha': 'd28062f5c87778ac87c13b211cb4683f0e384938', 'size': 156389, 'url': 'https://api.github.com/repos/sasa-z/logs/contents/log.txt?ref=main', 'html_url': 'https://github.com/sasa-z/logs/blob/main/log.txt', 'git_url': 'https://api.github.com/repos/sasa-z/logs/git/blobs/d28062f5c87778ac87c13b211cb4683f0e384938', 'download_url': 'https://raw.githubusercontent.com/sasa-z/logs/main/log.txt', 'type': 'file', '_links': {'self': 'https://api.github.com/repos/sasa-z/logs/contents/log.txt?ref=main', 'git': 'https://api.github.com/repos/sasa-z/logs/git/blobs/d28062f5c87778ac87c13b211cb4683f0e384938', 'html': 'https://github.com/sasa-z/logs/blob/main/log.txt'}}, 'commit': {'sha': 'aa623876630eff017f9b40e87fbb92cd9c08c441', 'node_id': 'C_kwDONoBLLNoAKGFhNjIzODc2NjMwZWZmMDE3ZjliNDBlODdmYmI5MmNkOWMwOGM0NDE', 'url': 'https://api.github.com/repos/sasa-z/logs/git/commits/aa623876630eff017f9b40e87fbb92cd9c08c441', 'html_url': 'https://github.com/sasa-z/logs/commit/aa623876630eff017f9b40e87fbb92cd9c08c441', 'author': {'name': 'Sasa', 'email': '93494682+sasa-z@users.noreply.github.com', 'date': '2025-01-09T14:36:35Z'}, 'committer': {'name': 'Sasa', 'email': '93494682+sasa-z@users.noreply.github.com', 'date': '2025-01-09T14:36:35Z'}, 'tree': {'sha': 'f7467b02c908f55ce73f6dda6983cdcc189e3771', 'url': 'https://api.github.com/repos/sasa-z/logs/git/trees/f7467b02c908f55ce73f6dda6983cdcc189e3771'}, 'message': 'Dodati logovi', 'parents': [{'sha': '7979c104a378f69fd676105979a48df2b705da98', 'url': 'https://api.github.com/repos/sasa-z/logs/git/commits/7979c104a378f69fd676105979a48df2b705da98', 'html_url': 'https://github.com/sasa-z/logs/commit/7979c104a378f69fd676105979a48df2b705da98'}], 'verification': {'verified': False, 'reason': 'unsigned', 'signature': None, 'payload': None, 'verified_at': None}}}
[2025-01-09T15:36:35.554166] Logovi uspešno uploadovani na GitHub.
[2025-01-09T15:39:41.715093] Pokretanje Flask aplikacije
[2025-01-09T15:39:41.715212] Inicijalizacija logova pri pokretanju aplikacije
[2025-01-09T15:39:41.715258] Početak funkcije get_pull_requests.
[2025-01-09T15:39:41.715304] Slanje zahteva ka API-ju sa params: {'state': 'open', 'per_page': 100}
[2025-01-09T15:39:42.361275] Odgovor API-ja dobijen, status kod: 200
[2025-01-09T15:39:42.363329] Dohvaćen broj pull requestova: 22
[2025-01-09T15:39:42.363420] Uspešno dohvaćeni pull requestovi.
[2025-01-09T15:39:42.364485] Dohvaćeni pull requestovi pri inicijalizaciji: [{'title': 'Docs: Add support for Adobe Analytics in documentation', 'num': 4379, 'link': 'https://github.com/boto/boto3/pull/4379'}, {'title': 'docs: Enhance Docs with S3 Examples of Generating Presigned URLs with Original File Names and Client Context Manager', 'num': 4377, 'link': 'https://github.com/boto/boto3/pull/4377'}, {'title': 'Removes inline scripts and inline styles to make it compatible with the newly added security headers', 'num': 4369, 'link': 'https://github.com/boto/boto3/pull/4369'}, {'title': 'Changed description for after-call Boto3 specific events', 'num': 4353, 'link': 'https://github.com/boto/boto3/pull/4353'}, {'title': 'Fixed style consistency in the set up part example of readme.', 'num': 4349, 'link': 'https://github.com/boto/boto3/pull/4349'}, {'title': 'Make ClientError accessible from S3UploadFailedError', 'num': 4346, 'link': 'https://github.com/boto/boto3/pull/4346'}, {'title': 'update the documentation for creating s3 bucket to address the region mismatch issue.', 'num': 4337, 'link': 'https://github.com/boto/boto3/pull/4337'}, {'title': 'Use built-in `logging.NullHandler`', 'num': 4231, 'link': 'https://github.com/boto/boto3/pull/4231'}, {'title': 'Add note on logical operators', 'num': 4141, 'link': 'https://github.com/boto/boto3/pull/4141'}, {'title': 'doc: add build_full_result() to Paginator', 'num': 4078, 'link': 'https://github.com/boto/boto3/pull/4078'}, {'title': 'Explain how MaxItems affects pagination in boto3', 'num': 4073, 'link': 'https://github.com/boto/boto3/pull/4073'}, {'title': 'Fix inject_condition_expressions transform for nested inputs such as …', 'num': 4054, 'link': 'https://github.com/boto/boto3/pull/4054'}, {'title': 'Add codespell: pre-commit, workflow (to just detect); make it fix found already present typos', 'num': 4035, 'link': 'https://github.com/boto/boto3/pull/4035'}, {'title': 'DynamoDB: Add support for TransactWriteItems for boto3 resource', 'num': 4010, 'link': 'https://github.com/boto/boto3/pull/4010'}, {'title': 'Updated docstrings: added clarification about Fileobj `close` behaviour', 'num': 3968, 'link': 'https://github.com/boto/boto3/pull/3968'}, {'title': 'Improve documentation for multiprocessing/threading', 'num': 3831, 'link': 'https://github.com/boto/boto3/pull/3831'}, {'title': 'docs: Added description of Sigv4 when generating PreSigned url', 'num': 3688, 'link': 'https://github.com/boto/boto3/pull/3688'}, {'title': 'refactor: rename "_get_default_session" to support use as public method', 'num': 3651, 'link': 'https://github.com/boto/boto3/pull/3651'}, {'title': "Returned future result in S3Transfer's download and upload", 'num': 3316, 'link': 'https://github.com/boto/boto3/pull/3316'}, {'title': 'Implement condition/attr __repr__', 'num': 3254, 'link': 'https://github.com/boto/boto3/pull/3254'}, {'title': 'Add Session.assume_role method', 'num': 3253, 'link': 'https://github.com/boto/boto3/pull/3253'}, {'title': 'Fix ExtraArgs supported by Bucket.copy', 'num': 3172, 'link': 'https://github.com/boto/boto3/pull/3172'}]
[2025-01-09T15:39:42.364572] Pokušaj dohvatanja SHA vrednosti fajla.
[2025-01-09T15:39:42.364614] Dohvatanje SHA vrednosti fajla sa URL-a: https://api.github.com/repos/sasa-z/logs/contents/log.txt
[2025-01-09T15:39:42.691714] SHA vrednost dobijena: 8b137891791fe96927ad78e64b0aad7bded08bdc
[2025-01-09T15:39:42.692570] SHA vrednost dobijena: 8b137891791fe96927ad78e64b0aad7bded08bdc
[2025-01-09T15:39:42.692789] SHA vrednost dobijena: 8b137891791fe96927ad78e64b0aad7bded08bdc. Pokušaj brisanja fajla sa GitHub-a.
[2025-01-09T15:39:42.692835] Pokušaj brisanja fajla sa URL-a: https://api.github.com/repos/sasa-z/logs/contents/log.txt sa SHA: 8b137891791fe96927ad78e64b0aad7bded08bdc
[2025-01-09T15:39:42.692885] Podaci za brisanje: {'message': 'Brisanje log fajla', 'sha': '8b137891791fe96927ad78e64b0aad7bded08bdc'}
[2025-01-09T15:39:43.265105] Status kod odgovora za brisanje: 200
[2025-01-09T15:39:43.265316] Odgovor za brisanje: {'content': None, 'commit': {'sha': 'af74dc17f64f70ac54344132a747f807306110e3', 'node_id': 'C_kwDONoBLLNoAKGFmNzRkYzE3ZjY0ZjcwYWM1NDM0NDEzMmE3NDdmODA3MzA2MTEwZTM', 'url': 'https://api.github.com/repos/sasa-z/logs/git/commits/af74dc17f64f70ac54344132a747f807306110e3', 'html_url': 'https://github.com/sasa-z/logs/commit/af74dc17f64f70ac54344132a747f807306110e3', 'author': {'name': 'Sasa', 'email': '93494682+sasa-z@users.noreply.github.com', 'date': '2025-01-09T14:39:43Z'}, 'committer': {'name': 'Sasa', 'email': '93494682+sasa-z@users.noreply.github.com', 'date': '2025-01-09T14:39:43Z'}, 'tree': {'sha': '4b825dc642cb6eb9a060e54bf8d69288fbee4904', 'url': 'https://api.github.com/repos/sasa-z/logs/git/trees/4b825dc642cb6eb9a060e54bf8d69288fbee4904'}, 'message': 'Brisanje log fajla', 'parents': [{'sha': 'adb64f9c5f63a0d53d1d65e77777491ab92df19f', 'url': 'https://api.github.com/repos/sasa-z/logs/git/commits/adb64f9c5f63a0d53d1d65e77777491ab92df19f', 'html_url': 'https://github.com/sasa-z/logs/commit/adb64f9c5f63a0d53d1d65e77777491ab92df19f'}], 'verification': {'verified': False, 'reason': 'unsigned', 'signature': None, 'payload': None, 'verified_at': None}}}
[2025-01-09T15:39:43.265384] Fajl na GitHub-u sa SHA vrednošću 8b137891791fe96927ad78e64b0aad7bded08bdc je obrisan.
[2025-01-09T15:39:43.266231] Fajl uspešno obrisan. Pokušaj upload-a novog fajla.
[2025-01-09T15:39:43.268793] Podaci za upload: {'message': 'Dodati logovi', 'content': '', 'branch': 'main'}
[2025-01-09T15:39:43.341454] Slanje zahteva za upload logova.
[2025-01-09T15:39:44.344886] Odgovor API-ja dobijen, status kod: 201
[2025-01-09T15:39:44.345166] Uspešno uploadovani logovi: {'content': {'name': 'log.txt', 'path': 'log.txt', 'sha': '9ae858d98c06f5823ecef1240d54dff25f1543ac', 'size': 373070, 'url': 'https://api.github.com/repos/sasa-z/logs/contents/log.txt?ref=main', 'html_url': 'https://github.com/sasa-z/logs/blob/main/log.txt', 'git_url': 'https://api.github.com/repos/sasa-z/logs/git/blobs/9ae858d98c06f5823ecef1240d54dff25f1543ac', 'download_url': 'https://raw.githubusercontent.com/sasa-z/logs/main/log.txt', 'type': 'file', '_links': {'self': 'https://api.github.com/repos/sasa-z/logs/contents/log.txt?ref=main', 'git': 'https://api.github.com/repos/sasa-z/logs/git/blobs/9ae858d98c06f5823ecef1240d54dff25f1543ac', 'html': 'https://github.com/sasa-z/logs/blob/main/log.txt'}}, 'commit': {'sha': '3d098fccc26f6e161a27be1801b2eb8bc61f3afc', 'node_id': 'C_kwDONoBLLNoAKDNkMDk4ZmNjYzI2ZjZlMTYxYTI3YmUxODAxYjJlYjhiYzYxZjNhZmM', 'url': 'https://api.github.com/repos/sasa-z/logs/git/commits/3d098fccc26f6e161a27be1801b2eb8bc61f3afc', 'html_url': 'https://github.com/sasa-z/logs/commit/3d098fccc26f6e161a27be1801b2eb8bc61f3afc', 'author': {'name': 'Sasa', 'email': '93494682+sasa-z@users.noreply.github.com', 'date': '2025-01-09T14:39:44Z'}, 'committer': {'name': 'Sasa', 'email': '93494682+sasa-z@users.noreply.github.com', 'date': '2025-01-09T14:39:44Z'}, 'tree': {'sha': 'fe93f2d87ff2131dce45c54ffb3bceeadd28b32e', 'url': 'https://api.github.com/repos/sasa-z/logs/git/trees/fe93f2d87ff2131dce45c54ffb3bceeadd28b32e'}, 'message': 'Dodati logovi', 'parents': [{'sha': 'af74dc17f64f70ac54344132a747f807306110e3', 'url': 'https://api.github.com/repos/sasa-z/logs/git/commits/af74dc17f64f70ac54344132a747f807306110e3', 'html_url': 'https://github.com/sasa-z/logs/commit/af74dc17f64f70ac54344132a747f807306110e3'}], 'verification': {'verified': False, 'reason': 'unsigned', 'signature': None, 'payload': None, 'verified_at': None}}}
[2025-01-09T15:39:44.346357] Logovi uspešno uploadovani na GitHub pri pokretanju aplikacije.
[2025-01-09T15:39:49.339762] Pokretanje Flask aplikacije
[2025-01-09T15:39:49.339878] Inicijalizacija logova pri pokretanju aplikacije
[2025-01-09T15:39:49.339927] Početak funkcije get_pull_requests.
[2025-01-09T15:39:49.339973] Slanje zahteva ka API-ju sa params: {'state': 'open', 'per_page': 100}
[2025-01-09T15:39:49.993172] Odgovor API-ja dobijen, status kod: 200
[2025-01-09T15:39:49.995417] Dohvaćen broj pull requestova: 22
[2025-01-09T15:39:49.995507] Uspešno dohvaćeni pull requestovi.
[2025-01-09T15:39:49.996566] Dohvaćeni pull requestovi pri inicijalizaciji: [{'title': 'Docs: Add support for Adobe Analytics in documentation', 'num': 4379, 'link': 'https://github.com/boto/boto3/pull/4379'}, {'title': 'docs: Enhance Docs with S3 Examples of Generating Presigned URLs with Original File Names and Client Context Manager', 'num': 4377, 'link': 'https://github.com/boto/boto3/pull/4377'}, {'title': 'Removes inline scripts and inline styles to make it compatible with the newly added security headers', 'num': 4369, 'link': 'https://github.com/boto/boto3/pull/4369'}, {'title': 'Changed description for after-call Boto3 specific events', 'num': 4353, 'link': 'https://github.com/boto/boto3/pull/4353'}, {'title': 'Fixed style consistency in the set up part example of readme.', 'num': 4349, 'link': 'https://github.com/boto/boto3/pull/4349'}, {'title': 'Make ClientError accessible from S3UploadFailedError', 'num': 4346, 'link': 'https://github.com/boto/boto3/pull/4346'}, {'title': 'update the documentation for creating s3 bucket to address the region mismatch issue.', 'num': 4337, 'link': 'https://github.com/boto/boto3/pull/4337'}, {'title': 'Use built-in `logging.NullHandler`', 'num': 4231, 'link': 'https://github.com/boto/boto3/pull/4231'}, {'title': 'Add note on logical operators', 'num': 4141, 'link': 'https://github.com/boto/boto3/pull/4141'}, {'title': 'doc: add build_full_result() to Paginator', 'num': 4078, 'link': 'https://github.com/boto/boto3/pull/4078'}, {'title': 'Explain how MaxItems affects pagination in boto3', 'num': 4073, 'link': 'https://github.com/boto/boto3/pull/4073'}, {'title': 'Fix inject_condition_expressions transform for nested inputs such as …', 'num': 4054, 'link': 'https://github.com/boto/boto3/pull/4054'}, {'title': 'Add codespell: pre-commit, workflow (to just detect); make it fix found already present typos', 'num': 4035, 'link': 'https://github.com/boto/boto3/pull/4035'}, {'title': 'DynamoDB: Add support for TransactWriteItems for boto3 resource', 'num': 4010, 'link': 'https://github.com/boto/boto3/pull/4010'}, {'title': 'Updated docstrings: added clarification about Fileobj `close` behaviour', 'num': 3968, 'link': 'https://github.com/boto/boto3/pull/3968'}, {'title': 'Improve documentation for multiprocessing/threading', 'num': 3831, 'link': 'https://github.com/boto/boto3/pull/3831'}, {'title': 'docs: Added description of Sigv4 when generating PreSigned url', 'num': 3688, 'link': 'https://github.com/boto/boto3/pull/3688'}, {'title': 'refactor: rename "_get_default_session" to support use as public method', 'num': 3651, 'link': 'https://github.com/boto/boto3/pull/3651'}, {'title': "Returned future result in S3Transfer's download and upload", 'num': 3316, 'link': 'https://github.com/boto/boto3/pull/3316'}, {'title': 'Implement condition/attr __repr__', 'num': 3254, 'link': 'https://github.com/boto/boto3/pull/3254'}, {'title': 'Add Session.assume_role method', 'num': 3253, 'link': 'https://github.com/boto/boto3/pull/3253'}, {'title': 'Fix ExtraArgs supported by Bucket.copy', 'num': 3172, 'link': 'https://github.com/boto/boto3/pull/3172'}]
[2025-01-09T15:39:49.996648] Pokušaj dohvatanja SHA vrednosti fajla.
[2025-01-09T15:39:49.996690] Dohvatanje SHA vrednosti fajla sa URL-a: https://api.github.com/repos/sasa-z/logs/contents/log.txt
[2025-01-09T15:39:50.537534] SHA vrednost dobijena: 9ae858d98c06f5823ecef1240d54dff25f1543ac
[2025-01-09T15:39:50.538539] SHA vrednost dobijena: 9ae858d98c06f5823ecef1240d54dff25f1543ac
[2025-01-09T15:39:50.538608] SHA vrednost dobijena: 9ae858d98c06f5823ecef1240d54dff25f1543ac. Pokušaj brisanja fajla sa GitHub-a.
[2025-01-09T15:39:50.538651] Pokušaj brisanja fajla sa URL-a: https://api.github.com/repos/sasa-z/logs/contents/log.txt sa SHA: 9ae858d98c06f5823ecef1240d54dff25f1543ac
[2025-01-09T15:39:50.538694] Podaci za brisanje: {'message': 'Brisanje log fajla', 'sha': '9ae858d98c06f5823ecef1240d54dff25f1543ac'}
[2025-01-09T15:39:51.026019] Status kod odgovora za brisanje: 200
[2025-01-09T15:39:51.026200] Odgovor za brisanje: {'content': None, 'commit': {'sha': '84dc3b3dc9dd036da0801002dfcc0f4c290da60a', 'node_id': 'C_kwDONoBLLNoAKDg0ZGMzYjNkYzlkZDAzNmRhMDgwMTAwMmRmY2MwZjRjMjkwZGE2MGE', 'url': 'https://api.github.com/repos/sasa-z/logs/git/commits/84dc3b3dc9dd036da0801002dfcc0f4c290da60a', 'html_url': 'https://github.com/sasa-z/logs/commit/84dc3b3dc9dd036da0801002dfcc0f4c290da60a', 'author': {'name': 'Sasa', 'email': '93494682+sasa-z@users.noreply.github.com', 'date': '2025-01-09T14:39:51Z'}, 'committer': {'name': 'Sasa', 'email': '93494682+sasa-z@users.noreply.github.com', 'date': '2025-01-09T14:39:51Z'}, 'tree': {'sha': '4b825dc642cb6eb9a060e54bf8d69288fbee4904', 'url': 'https://api.github.com/repos/sasa-z/logs/git/trees/4b825dc642cb6eb9a060e54bf8d69288fbee4904'}, 'message': 'Brisanje log fajla', 'parents': [{'sha': '3d098fccc26f6e161a27be1801b2eb8bc61f3afc', 'url': 'https://api.github.com/repos/sasa-z/logs/git/commits/3d098fccc26f6e161a27be1801b2eb8bc61f3afc', 'html_url': 'https://github.com/sasa-z/logs/commit/3d098fccc26f6e161a27be1801b2eb8bc61f3afc'}], 'verification': {'verified': False, 'reason': 'unsigned', 'signature': None, 'payload': None, 'verified_at': None}}}
[2025-01-09T15:39:51.026289] Fajl na GitHub-u sa SHA vrednošću 9ae858d98c06f5823ecef1240d54dff25f1543ac je obrisan.
[2025-01-09T15:39:51.027086] Fajl uspešno obrisan. Pokušaj upload-a novog fajla.
[2025-01-09T15:39:51.035850] Podaci za upload: {'message': 'Dodati logovi', 'content': '', 'branch': 'main'}
[2025-01-09T15:39:51.396864] Slanje zahteva za upload logova.
[2025-01-09T15:39:53.098945] Odgovor API-ja dobijen, status kod: 201
[2025-01-09T15:39:53.099149] Uspešno uploadovani logovi: {'content': {'name': 'log.txt', 'path': 'log.txt', 'sha': '2f79faaad956f79f04c86d8e60d321e86f18e6b8', 'size': 878685, 'url': 'https://api.github.com/repos/sasa-z/logs/contents/log.txt?ref=main', 'html_url': 'https://github.com/sasa-z/logs/blob/main/log.txt', 'git_url': 'https://api.github.com/repos/sasa-z/logs/git/blobs/2f79faaad956f79f04c86d8e60d321e86f18e6b8', 'download_url': 'https://raw.githubusercontent.com/sasa-z/logs/main/log.txt', 'type': 'file', '_links': {'self': 'https://api.github.com/repos/sasa-z/logs/contents/log.txt?ref=main', 'git': 'https://api.github.com/repos/sasa-z/logs/git/blobs/2f79faaad956f79f04c86d8e60d321e86f18e6b8', 'html': 'https://github.com/sasa-z/logs/blob/main/log.txt'}}, 'commit': {'sha': '3a634634e3d40bf15fd908997a2ad2a6176b8c31', 'node_id': 'C_kwDONoBLLNoAKDNhNjM0NjM0ZTNkNDBiZjE1ZmQ5MDg5OTdhMmFkMmE2MTc2YjhjMzE', 'url': 'https://api.github.com/repos/sasa-z/logs/git/commits/3a634634e3d40bf15fd908997a2ad2a6176b8c31', 'html_url': 'https://github.com/sasa-z/logs/commit/3a634634e3d40bf15fd908997a2ad2a6176b8c31', 'author': {'name': 'Sasa', 'email': '93494682+sasa-z@users.noreply.github.com', 'date': '2025-01-09T14:39:52Z'}, 'committer': {'name': 'Sasa', 'email': '93494682+sasa-z@users.noreply.github.com', 'date': '2025-01-09T14:39:52Z'}, 'tree': {'sha': '7cea5cedc3d13715ec3a38a38e2f870e3d6ce92e', 'url': 'https://api.github.com/repos/sasa-z/logs/git/trees/7cea5cedc3d13715ec3a38a38e2f870e3d6ce92e'}, 'message': 'Dodati logovi', 'parents': [{'sha': '84dc3b3dc9dd036da0801002dfcc0f4c290da60a', 'url': 'https://api.github.com/repos/sasa-z/logs/git/commits/84dc3b3dc9dd036da0801002dfcc0f4c290da60a', 'html_url': 'https://github.com/sasa-z/logs/commit/84dc3b3dc9dd036da0801002dfcc0f4c290da60a'}], 'verification': {'verified': False, 'reason': 'unsigned', 'signature': None, 'payload': None, 'verified_at': None}}}
[2025-01-09T15:39:53.100743] Logovi uspešno uploadovani na GitHub pri pokretanju aplikacije.
[2025-01-09T15:39:53.240301] Pokretanje Flask aplikacije
[2025-01-09T15:39:53.240421] Inicijalizacija logova pri pokretanju aplikacije
[2025-01-09T15:39:53.240470] Početak funkcije get_pull_requests.
[2025-01-09T15:39:53.240513] Slanje zahteva ka API-ju sa params: {'state': 'open', 'per_page': 100}
[2025-01-09T15:39:54.021759] Odgovor API-ja dobijen, status kod: 200
[2025-01-09T15:39:54.024269] Dohvaćen broj pull requestova: 22
[2025-01-09T15:39:54.024389] Uspešno dohvaćeni pull requestovi.
[2025-01-09T15:39:54.025476] Dohvaćeni pull requestovi pri inicijalizaciji: [{'title': 'Docs: Add support for Adobe Analytics in documentation', 'num': 4379, 'link': 'https://github.com/boto/boto3/pull/4379'}, {'title': 'docs: Enhance Docs with S3 Examples of Generating Presigned URLs with Original File Names and Client Context Manager', 'num': 4377, 'link': 'https://github.com/boto/boto3/pull/4377'}, {'title': 'Removes inline scripts and inline styles to make it compatible with the newly added security headers', 'num': 4369, 'link': 'https://github.com/boto/boto3/pull/4369'}, {'title': 'Changed description for after-call Boto3 specific events', 'num': 4353, 'link': 'https://github.com/boto/boto3/pull/4353'}, {'title': 'Fixed style consistency in the set up part example of readme.', 'num': 4349, 'link': 'https://github.com/boto/boto3/pull/4349'}, {'title': 'Make ClientError accessible from S3UploadFailedError', 'num': 4346, 'link': 'https://github.com/boto/boto3/pull/4346'}, {'title': 'update the documentation for creating s3 bucket to address the region mismatch issue.', 'num': 4337, 'link': 'https://github.com/boto/boto3/pull/4337'}, {'title': 'Use built-in `logging.NullHandler`', 'num': 4231, 'link': 'https://github.com/boto/boto3/pull/4231'}, {'title': 'Add note on logical operators', 'num': 4141, 'link': 'https://github.com/boto/boto3/pull/4141'}, {'title': 'doc: add build_full_result() to Paginator', 'num': 4078, 'link': 'https://github.com/boto/boto3/pull/4078'}, {'title': 'Explain how MaxItems affects pagination in boto3', 'num': 4073, 'link': 'https://github.com/boto/boto3/pull/4073'}, {'title': 'Fix inject_condition_expressions transform for nested inputs such as …', 'num': 4054, 'link': 'https://github.com/boto/boto3/pull/4054'}, {'title': 'Add codespell: pre-commit, workflow (to just detect); make it fix found already present typos', 'num': 4035, 'link': 'https://github.com/boto/boto3/pull/4035'}, {'title': 'DynamoDB: Add support for TransactWriteItems for boto3 resource', 'num': 4010, 'link': 'https://github.com/boto/boto3/pull/4010'}, {'title': 'Updated docstrings: added clarification about Fileobj `close` behaviour', 'num': 3968, 'link': 'https://github.com/boto/boto3/pull/3968'}, {'title': 'Improve documentation for multiprocessing/threading', 'num': 3831, 'link': 'https://github.com/boto/boto3/pull/3831'}, {'title': 'docs: Added description of Sigv4 when generating PreSigned url', 'num': 3688, 'link': 'https://github.com/boto/boto3/pull/3688'}, {'title': 'refactor: rename "_get_default_session" to support use as public method', 'num': 3651, 'link': 'https://github.com/boto/boto3/pull/3651'}, {'title': "Returned future result in S3Transfer's download and upload", 'num': 3316, 'link': 'https://github.com/boto/boto3/pull/3316'}, {'title': 'Implement condition/attr __repr__', 'num': 3254, 'link': 'https://github.com/boto/boto3/pull/3254'}, {'title': 'Add Session.assume_role method', 'num': 3253, 'link': 'https://github.com/boto/boto3/pull/3253'}, {'title': 'Fix ExtraArgs supported by Bucket.copy', 'num': 3172, 'link': 'https://github.com/boto/boto3/pull/3172'}]
[2025-01-09T15:39:54.025562] Pokušaj dohvatanja SHA vrednosti fajla.
[2025-01-09T15:39:54.025610] Dohvatanje SHA vrednosti fajla sa URL-a: https://api.github.com/repos/sasa-z/logs/contents/log.txt
[2025-01-09T15:39:54.741660] SHA vrednost dobijena: 2f79faaad956f79f04c86d8e60d321e86f18e6b8
[2025-01-09T15:39:54.742804] SHA vrednost dobijena: 2f79faaad956f79f04c86d8e60d321e86f18e6b8
[2025-01-09T15:39:54.742880] SHA vrednost dobijena: 2f79faaad956f79f04c86d8e60d321e86f18e6b8. Pokušaj brisanja fajla sa GitHub-a.
[2025-01-09T15:39:54.742934] Pokušaj brisanja fajla sa URL-a: https://api.github.com/repos/sasa-z/logs/contents/log.txt sa SHA: 2f79faaad956f79f04c86d8e60d321e86f18e6b8
[2025-01-09T15:39:54.742988] Podaci za brisanje: {'message': 'Brisanje log fajla', 'sha': '2f79faaad956f79f04c86d8e60d321e86f18e6b8'}
[2025-01-09T15:39:55.392081] Status kod odgovora za brisanje: 200
[2025-01-09T15:39:55.392237] Odgovor za brisanje: {'content': None, 'commit': {'sha': '9e93259a57150178ef759330662ff6404e7ca7e4', 'node_id': 'C_kwDONoBLLNoAKDllOTMyNTlhNTcxNTAxNzhlZjc1OTMzMDY2MmZmNjQwNGU3Y2E3ZTQ', 'url': 'https://api.github.com/repos/sasa-z/logs/git/commits/9e93259a57150178ef759330662ff6404e7ca7e4', 'html_url': 'https://github.com/sasa-z/logs/commit/9e93259a57150178ef759330662ff6404e7ca7e4', 'author': {'name': 'Sasa', 'email': '93494682+sasa-z@users.noreply.github.com', 'date': '2025-01-09T14:39:55Z'}, 'committer': {'name': 'Sasa', 'email': '93494682+sasa-z@users.noreply.github.com', 'date': '2025-01-09T14:39:55Z'}, 'tree': {'sha': '4b825dc642cb6eb9a060e54bf8d69288fbee4904', 'url': 'https://api.github.com/repos/sasa-z/logs/git/trees/4b825dc642cb6eb9a060e54bf8d69288fbee4904'}, 'message': 'Brisanje log fajla', 'parents': [{'sha': '3a634634e3d40bf15fd908997a2ad2a6176b8c31', 'url': 'https://api.github.com/repos/sasa-z/logs/git/commits/3a634634e3d40bf15fd908997a2ad2a6176b8c31', 'html_url': 'https://github.com/sasa-z/logs/commit/3a634634e3d40bf15fd908997a2ad2a6176b8c31'}], 'verification': {'verified': False, 'reason': 'unsigned', 'signature': None, 'payload': None, 'verified_at': None}}}
[2025-01-09T15:39:55.392310] Fajl na GitHub-u sa SHA vrednošću 2f79faaad956f79f04c86d8e60d321e86f18e6b8 je obrisan.
[2025-01-09T15:39:55.393224] Fajl uspešno obrisan. Pokušaj upload-a novog fajla.
